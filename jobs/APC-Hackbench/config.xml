<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.8.4"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.8.4">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Run Hackbench repeatedly and collect current values from sysfs.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>NODE</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ITERATIONS</name>
          <description>Number of hackbench iterations to run</description>
          <defaultValue>10</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DELAY</name>
          <description>Time in seconds to wait between each hackbench run</description>
          <defaultValue>10</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LOOPS</name>
          <description>Number of loops to perform in each hackbench run</description>
          <defaultValue>10000</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.90">
    <script>pipeline {
    agent { label params.NODE }

    stages {
        stage(&apos;Connect&apos;) {
            steps {
                sh &quot;&quot;&quot;
                adb connect ${env.IPADDRESS}:${env.PORT}
                adb shell &apos;echo temp &gt; /sys/power/wake_lock&apos;
                &quot;&quot;&quot;
            }
        }
        stage(&apos;Copy Tools&apos;) {
            steps {
                node(&apos;master&apos;) {
                    cleanWs()
                    sh &apos;cp ../../../tools/* .&apos;
                    sh &apos;ls&apos;
                    sh &apos;pwd&apos;
                    stash includes: &apos;*&apos;, name: &apos;tools&apos;
                }
                unstash &apos;tools&apos;
                sh &apos;&apos;&apos;
                adb shell &quot;mkdir -p /data/myci-apc/&quot;
                adb push battery_stats.sh /data/myci-apc/
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Hackbench&apos;) {
            steps {
                sh &apos;&apos;&apos;
                adb shell &quot;&quot;&quot;
                cd /data/myci-apc/
                for i in \\$(seq ${ITERATIONS})
                do
                    ./battery_stats.sh hackbench_battery_\\$i.csv &amp;
                    pid=\\$!
                    hackbench -l ${LOOPS}
                    kill -9 \\$pid
                    sleep ${DELAY}
                done
                &quot;&quot;&quot;
                for i in $(seq ${ITERATIONS})
                do
                    adb pull /data/myci-apc/hackbench_battery_$i.csv .
                done
                ./plot.py ${NODE}_hackbench &gt; summary.txt
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Archive&apos;) {
            steps {
                archiveArtifacts artifacts: &apos;*.csv&apos;, followSymlinks: false
                archiveArtifacts artifacts: &apos;*.png&apos;, followSymlinks: false
                archiveArtifacts artifacts: &apos;summary.txt&apos;, followSymlinks: false
            }
        }
    }
    post {
        always {
            cleanWs()
            sh &apos;&apos;&apos;
            adb shell &quot;echo temp &gt; /sys/power/wake_unlock&quot;
            adb shell &quot;rm -rf /data/myci-apc/&quot;
            &apos;&apos;&apos;
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
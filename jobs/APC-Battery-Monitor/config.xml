<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.8.4"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.8.4">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Collect current values from sysfs for a specified period of time.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>NODE</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TIME</name>
          <description>Time in seconds to monitor the battery for.</description>
          <defaultValue>60</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.87">
    <script>pipeline {
    agent { label params.NODE }

    stages {
        stage(&apos;Connect&apos;) {
            steps {
                sh &quot;&quot;&quot;
                adb connect ${env.IPADDRESS}:${env.PORT}
                &quot;&quot;&quot;
            }
        }
        stage(&apos;Monitor Battery&apos;) {
            steps {
                sh &apos;&apos;&apos;
                adb shell &quot;echo temp &gt; /sys/power/wake_lock&quot;
                adb shell &quot;&quot;&quot;
                    cd /sdcard
                    battery_stats.sh battery_monitor.csv &amp;
                    pid=\\$!
                    sleep ${TIME}
                    kill -9 \\$pid
                &quot;&quot;&quot;
                adb shell &quot;echo temp &gt; /sys/power/wake_unlock&quot;

                rm -f sum.txt
                adb pull /sdcard/battery_monitor.csv .
                adb shell &quot;rm /sdcard/battery_monitor.csv&quot;
                python -c &quot;&quot;&quot;
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv(&apos;battery_monitor.csv&apos;)
df = pd.DataFrame(data)

df = df/1000
print(df.current.describe(percentiles=[0.9,0.95,0.99]))

ax = df.current.plot()

ax.set_title(&apos;Idle Current on Pixel 4&apos;)
ax.set_ylabel(&apos;Current mA&apos;)
ax.set_xlabel(&apos;Count&apos;)

plt.savefig(&apos;battery_monitor.png&apos;)
                &quot;&quot;&quot; &gt; summary.txt
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Archive&apos;) {
            steps {
                archiveArtifacts artifacts: &apos;battery_monitor.csv&apos;, followSymlinks: false
                archiveArtifacts artifacts: &apos;battery_monitor.png&apos;, followSymlinks: false
                archiveArtifacts artifacts: &apos;summary.txt&apos;, followSymlinks: false
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>